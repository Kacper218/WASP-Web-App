// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WASP_Web_App;

#nullable disable

namespace WASP_Web_App.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20240103131930_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WASP_Web_App.Entities.Auth", b =>
                {
                    b.Property<int>("User_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("User_ID"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("User_ID");

                    b.ToTable("Auth");
                });

            modelBuilder.Entity("WASP_Web_App.Entities.GroupKeys", b =>
                {
                    b.Property<int>("GroupKey_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("GroupKey_ID"));

                    b.Property<int>("Group_ID")
                        .HasColumnType("integer");

                    b.Property<int>("Key_ID")
                        .HasColumnType("integer");

                    b.HasKey("GroupKey_ID");

                    b.HasIndex("Group_ID");

                    b.HasIndex("Key_ID");

                    b.ToTable("GroupKeys");
                });

            modelBuilder.Entity("WASP_Web_App.Entities.Groups", b =>
                {
                    b.Property<int>("Group_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Group_ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Group_ID");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("WASP_Web_App.Entities.Keys", b =>
                {
                    b.Property<int>("Key_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Key_ID"));

                    b.Property<string>("Room")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Key_ID");

                    b.ToTable("Keys");
                });

            modelBuilder.Entity("WASP_Web_App.Entities.Permissions", b =>
                {
                    b.Property<int>("Permission_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Permission_ID"));

                    b.Property<int>("Group_ID")
                        .HasColumnType("integer");

                    b.Property<int>("User_ID")
                        .HasColumnType("integer");

                    b.HasKey("Permission_ID");

                    b.HasIndex("Group_ID");

                    b.HasIndex("User_ID");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("WASP_Web_App.Entities.Rent", b =>
                {
                    b.Property<int>("Rent_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Rent_ID"));

                    b.Property<DateTime>("From")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Key_ID")
                        .HasColumnType("integer");

                    b.Property<DateTime>("To")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("User_ID")
                        .HasColumnType("integer");

                    b.HasKey("Rent_ID");

                    b.HasIndex("Key_ID");

                    b.HasIndex("User_ID");

                    b.ToTable("Rent");
                });

            modelBuilder.Entity("WASP_Web_App.Entities.SpecialPermissions", b =>
                {
                    b.Property<int>("SpecialPermission_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SpecialPermission_ID"));

                    b.Property<DateTime>("From")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Key_ID")
                        .HasColumnType("integer");

                    b.Property<DateTime>("To")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("User_ID")
                        .HasColumnType("integer");

                    b.HasKey("SpecialPermission_ID");

                    b.HasIndex("Key_ID");

                    b.HasIndex("User_ID");

                    b.ToTable("SpecialPermissions");
                });

            modelBuilder.Entity("WASP_Web_App.Entities.Users", b =>
                {
                    b.Property<int>("User_ID")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("User_ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WASP_Web_App.Entities.GroupKeys", b =>
                {
                    b.HasOne("WASP_Web_App.Entities.Groups", "Groups")
                        .WithMany("GroupKeys")
                        .HasForeignKey("Group_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WASP_Web_App.Entities.Keys", "Keys")
                        .WithMany("GroupKeys")
                        .HasForeignKey("Key_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Groups");

                    b.Navigation("Keys");
                });

            modelBuilder.Entity("WASP_Web_App.Entities.Permissions", b =>
                {
                    b.HasOne("WASP_Web_App.Entities.Groups", "Groups")
                        .WithMany("Permissions")
                        .HasForeignKey("Group_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WASP_Web_App.Entities.Auth", "Auth")
                        .WithMany("Permissions")
                        .HasForeignKey("User_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auth");

                    b.Navigation("Groups");
                });

            modelBuilder.Entity("WASP_Web_App.Entities.Rent", b =>
                {
                    b.HasOne("WASP_Web_App.Entities.Keys", "Keys")
                        .WithMany("Rent")
                        .HasForeignKey("Key_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WASP_Web_App.Entities.Auth", "Auth")
                        .WithMany("Rent")
                        .HasForeignKey("User_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auth");

                    b.Navigation("Keys");
                });

            modelBuilder.Entity("WASP_Web_App.Entities.SpecialPermissions", b =>
                {
                    b.HasOne("WASP_Web_App.Entities.Keys", "Keys")
                        .WithMany("SpecialPermissions")
                        .HasForeignKey("Key_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WASP_Web_App.Entities.Auth", "Auth")
                        .WithMany("SpecialPermissions")
                        .HasForeignKey("User_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auth");

                    b.Navigation("Keys");
                });

            modelBuilder.Entity("WASP_Web_App.Entities.Users", b =>
                {
                    b.HasOne("WASP_Web_App.Entities.Auth", "Auth")
                        .WithOne("Users")
                        .HasForeignKey("WASP_Web_App.Entities.Users", "User_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auth");
                });

            modelBuilder.Entity("WASP_Web_App.Entities.Auth", b =>
                {
                    b.Navigation("Permissions");

                    b.Navigation("Rent");

                    b.Navigation("SpecialPermissions");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("WASP_Web_App.Entities.Groups", b =>
                {
                    b.Navigation("GroupKeys");

                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("WASP_Web_App.Entities.Keys", b =>
                {
                    b.Navigation("GroupKeys");

                    b.Navigation("Rent");

                    b.Navigation("SpecialPermissions");
                });
#pragma warning restore 612, 618
        }
    }
}
